openapi: 3.0.3
info:
  title: API Binar Car Rental
  description: API for manage binar rental cars application
  version: 1.0.0
servers:
  - url: localhost:3000
    description: Local server
paths:
  /user/login:
    post:
      summary: Login Account
      tags:
        - User
      requestBody:
        description: Login User
        required: True
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUser'
      responses:
        '201':
          description: Login User successfuly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseLogin'
  /user/register:
    post:
      summary: Register User
      tags:
        - User
      requestBody:
        description: Register Account User
        required: True
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
      responses:
        '201':
          description: Account created successfuly
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseRegisterUser'

  /cars/available:
    get:
      summary: Get List Available Cars
      tags:
        - Cars
      responses:
        '200':
          description: List Available Cars
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableCars'

  /cars/all:
    get:
      summary: Get List All Cars
      tags:
        - Cars
      responses:
        '200':
          description: List All Cars
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: OK
                  cars:
                    type: array
                    items:
                      $ref: '#/components/schemas/AllCars'
        '401':
          description: Unauthorized, no valid token provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'Unauthorized'
                  message:
                    type: string
                    example: 'Unauthorized'
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'Forbidden'
                  message:
                    type: string
                    example: 'Access Denied'

  /cars/create:
    post:
      summary: Create a new car
      tags:
        - Cars
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCreateCar'
      responses:
        '201':
          description: Data successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: OK
                  message:
                    type: string
                    example: Data successfully created!
                  data:
                    $ref: '#/components/schemas/CreateCar'

        '401':
          description: Unauthorized, no valid token provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'Unauthorized'
                  message:
                    type: string
                    example: 'Unauthorized'
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'Forbidden'
                  message:
                    type: string
                    example: 'Access Denied'

  /cars/{id}:
    get:
      summary: Get Cars by ID
      tags:
        - Cars
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Get car details by ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  car:
                    $ref: '#/components/schemas/GetCarbyId'

        '401':
          description: Unauthorized, no valid token provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'Unauthorized'
                  message:
                    type: string
                    example: 'Unauthorized'
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'Forbidden'
                  message:
                    type: string
                    example: 'Access Denied'

    put:
      summary: Update Cars by ID
      tags:
        - Cars
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarUpdateRequest'
      responses:
        '200':
          description: Car successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Data berhasil di update!'

        '401':
          description: Unauthorized, no valid token provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'Unauthorized'
                  message:
                    type: string
                    example: 'Unauthorized'
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'Forbidden'
                  message:
                    type: string
                    example: 'Access Denied'

    delete:
      summary: Delete Cars by ID
      tags:
        - Cars
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Item successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'OK'
                  message:
                    type: string
                    example: 'Item successfully deleted'

        '401':
          description: Unauthorized, no valid token provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'Unauthorized'
                  message:
                    type: string
                    example: 'Unauthorized'
        '403':
          description: Access Denied
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'Forbidden'
                  message:
                    type: string
                    example: 'Access Denied'

  /whoami:
    get:
      summary: Get the current logged-in user's information
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Current logged-in user information
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 666
                  name:
                    type: string
                    example: member
                  role:
                    type: string
                    example: user
                  email:
                    type: string
                    example: user@user.com

        '401':
          description: Unauthorized, no valid token provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: 'error'
                  message:
                    type: string
                    example: 'Unauthorized'

components:
  schemas:
    #Login User
    InputUser:
      type: object
      properties:
        email:
          type: string
          example: 'user@user.com'
        password:
          type: string
          example: 'user1234'

    ResponseLogin:
      type: object
      properties:
        id:
          type: number
          example: 666
        email:
          type: string
          example: user@user.com
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJuZnJobmRuQGdtYWlsLmNvbSIsImNyZWF0ZWRBdCI6IjIwMjQtMDUtMjlUMTY6MjM6MTEuNTExWiIsInVwZGF0ZWRBdCI6IjIwMjQtMDUtMjlUMTY6MjM6MTEuNTExWiIsImlhdCI6MTcxNzAxNzMxMn0.keTC69-D2rP_4wswc02ICYGmFYq9gwqMqp-K_4mqQ9E

    #Register User
    RegisterUser:
      type: object
      properties:
        name:
          type: string
          example: 'user'
        email:
          type: string
          example: 'user@user.com'
        password:
          type: string
          example: 'user1234'

    ResponseRegisterUser:
      type: object
      properties:
        id:
          type: number
          example: '1'
        name:
          type: string
          example: 'user1'
        email:
          type: string
          example: 'user1@user.com'
        password:
          type: string
          example: 'user1234'
        role:
          type: string
          example: 'user'

    #AvailableCars
    AvailableCars:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 555
        name:
          type: string
          example: 'Mercedes Benz AMG GT'
        price:
          type: integer
          example: '24000000'
        category:
          type: string
          example: small
        image:
          type: string
          example: 'https://res.cloudinary.com/dnw1qkqei/image/upload/v1716712774/challenge-5-bcr/Mercedes_Benz_AMG_GT_fkjvtw.jpg'
        start_date:
          type: string
          format: date-time
          example: '2024-03-16T13:00:00.000Z'
        end_date:
          type: string
          format: date-time
          example: '2024-03-20T13:00:00.000Z'
        availability:
          type: boolean
          example: true
        createdAt:
          type: string
          format: date-time
          example: '2024-06-03T13:05:25.136Z'
        updatedAt:
          type: string
          format: date-time
          example: '2024-06-03T14:05:25.136Z'
        createdBy:
          type: string
          example: 'admin'
        updatedBy:
          type: string
          example: 'admin'

    #AllCars
    AllCars:
      type: object
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 555
        name:
          type: string
          example: 'Toyota Supra'
        price:
          type: integer
          example: '24000000'
        category:
          type: string
          example: small
        image:
          type: string
          example: 'https://res.cloudinary.com/dnw1qkqei/image/upload/v1716712774/challenge-5-bcr/Mercedes_Benz_AMG_GT_fkjvtw.jpg'
        start_date:
          type: string
          format: date-time
          example: '2024-03-16T13:00:00.000Z'
        end_date:
          type: string
          format: date-time
          example: '2024-03-20T13:00:00.000Z'
        availability:
          type: boolean
          example: true
        createdAt:
          type: string
          format: date-time
          example: '2024-06-03T13:05:25.136Z'
        updatedAt:
          type: string
          format: date-time
          example: '2024-06-03T14:05:25.136Z'
        createdBy:
          type: string
          example: 'admin'
        updatedBy:
          type: string
          example: 'admin'

    #Create Cars
    RequestCreateCar:
      type: object
      required:
        - name
        - price
        - category
        - image
        - start_date
        - end_date
        - availability
      properties:
        name:
          type: string
          example: 'Lamborghini 400 GT'
        price:
          type: integer
          example: '35000000'
        category:
          type: string
          example: 'small'
        image:
          type: string
          example: 'https://example.com/car.jpg' # Optional field if you want to include an image
        start_date:
          type: string
          format: date
          example: '2024/06/03'
        end_date:
          type: string
          format: date
          example: '2024/06/04'
        availability:
          type: boolean
          example: true

    CreateCar:
      type: object
      properties:
        id:
          type: integer
          example: 4
        name:
          type: string
          example: 'Lamborghini 400 GT'
        price:
          type: integer
          example: '35000000'
        category:
          type: string
          example: small
        image:
          type: string
          example: 'https://res.cloudinary.com/dnw1qkqei/image/upload/v1717922797/challenge-5-bcr/Lamborghini_400_GT_yqm6qz.jpg'
        start_date:
          type: string
          format: date
          example: '2024/06/03'
        end_date:
          type: string
          format: date
          example: '2024/06/04'
        availability:
          type: boolean
          example: true
        createdAt:
          type: string
          format: date-time
          example: '2024-06-03T11:07:30.823Z'
        updatedAt:
          type: string
          format: date-time
          example: '2024-06-03T11:07:30.823Z'
        user_id:
          type: integer
          example: 444
        createdBy:
          type: string
          example: 'superadmin'
        updatedBy:
          type: string
          nullable: true
          example: null

    # #Get Cars by ID
    GetCarbyId:
      type: object
      properties:
        id:
          type: integer
          example: 3
        user_id:
          type: integer
          example: 555
        name:
          type: string
          example: 'BMW i5'
        price:
          type: integer
          example: '6000000'
        category:
          type: string
          example: 'small'
        image:
          type: string
          example: 'https://res.cloudinary.com/dnw1qkqei/image/upload/v1716712772/challenge-5-bcr/BMW_i5_trooep.jpg'
        start_date:
          type: string
          format: date-time
          example: '2024-05-10T16:00:00.000Z'
        end_date:
          type: string
          format: date-time
          example: '2024-05-10T12:00:00.000Z'
        availability:
          type: boolean
          example: true
        createdAt:
          type: string
          format: date-time
          example: '2024-06-03T11:04:25.136Z'
        updatedAt:
          type: string
          format: date-time
          example: '2024-06-04T11:04:25.136Z'
        createdBy:
          type: string
          example: 'admin'
        updatedBy:
          type: string
          example: 'admin'

    # #Update Cars by ID
    CarUpdateRequest:
      type: object
      required:
        - name
        - price
        - category
        - start_date
        - end_date
        - image
        - availability
      properties:
        id:
          type: integer
          example: '2'
        name:
          type: string
          example: 'Jeep Wrangler Red'
        price:
          type: integer
          example: '4000000'
        category:
          type: string
          example: 'small'
        start_date:
          type: string
          format: date
          example: '2024-02-15'
        end_date:
          type: string
          format: date
          example: '2024-02-15'
        image:
          type: string
          example: 'https://res.cloudinary.com/dnw1qkqei/image/upload/v1716715312/challenge-5-bcr/Jeep_Wrangler_Red_es8atz.jpg'
        availability:
          type: boolean
          example: false
